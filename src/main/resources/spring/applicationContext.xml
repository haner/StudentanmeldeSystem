<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="          
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd          
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd          
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd          
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd          
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- <context:property-placeholder properties-ref="propertyConfigurer" /> -->

	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/files/**" location="/files/" />

	<!-- Properties -->
	<!-- Imports datasource configuration -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/spring/ojdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- DataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Mybatis's sqlSessionFactory config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
	</bean>

	<!-- TransactionManager -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- Imports logging configuration -->
	<import resource="classpath*:/trace-context.xml" />

	<!-- Imports datasource configuration -->
	<!-- <import resource="spring-data.xml" /> <bean id="deployProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean" 
		p:location="/WEB-INF/spring.properties" /> -->

	<!-- scan mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="spring.webapp.loginsystem.persistence.mapper" />
	</bean>


	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Actived Annotation Function for Domain object -->
	<context:spring-configured />


	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller @resourceand and @Service. Make 
		sure to set the correct base-package -->
	<context:component-scan
		base-package="spring.webapp.loginsystem.service, spring.webapp.loginsystem.controller, spring.webapp.loginsystem.persistence.dao" />

</beans>
